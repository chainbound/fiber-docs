"use strict";(self.webpackChunkfiber_website=self.webpackChunkfiber_website||[]).push([[75],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=s(r),b=a,u=d["".concat(l,".").concat(b)]||d[b]||c[b]||o;return r?n.createElement(u,i(i({ref:t},m),{},{components:r})):n.createElement(u,i({ref:t},m))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3208:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:5,title:"Roadmap"},i=void 0,p={unversionedId:"roadmap",id:"roadmap",title:"Roadmap",description:"Phase 1: Fiber goes Live!",source:"@site/docs/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/docs/roadmap",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/roadmap.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Roadmap"},sidebar:"tutorialSidebar",previous:{title:"Regions",permalink:"/docs/regions"},next:{title:"FAQ",permalink:"/docs/faq"}},l={},s=[{value:"Phase 1: <strong>Fiber</strong> goes Live!",id:"phase-1-fiber-goes-live",level:2},{value:"<em>September -&gt; November &#39;22</em>",id:"september---november-22",level:4},{value:"Phase 2: <strong>Fiber</strong> optimizoooor",id:"phase-2-fiber-optimizoooor",level:2},{value:"<em>December &#39;22 -&gt; January &#39;23</em>",id:"december-22---january-23",level:4},{value:"Phase 3: Privatizing the order-flow",id:"phase-3-privatizing-the-order-flow",level:2},{value:"<em>January -&gt; March &#39;23</em>",id:"january---march-23",level:4},{value:"Phase 4: Block-Builders 2.0",id:"phase-4-block-builders-20",level:2},{value:"<em>March -&gt; April &#39;22</em>",id:"march---april-22",level:4},{value:"Phase 5: Rolling up <strong>Fiber</strong>",id:"phase-5-rolling-up-fiber",level:2},{value:"<em>Q3/4 &#39;23</em>",id:"q34-23",level:4}],m={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"phase-1-fiber-goes-live"},"Phase 1: ",(0,a.kt)("strong",{parentName:"h2"},"Fiber")," goes Live!"),(0,a.kt)("h4",{id:"september---november-22"},(0,a.kt)("em",{parentName:"h4"},"September -> November '22")),(0,a.kt)("p",null,"\u2705 ",(0,a.kt)("inlineCode",{parentName:"p"},"FIBER")," MVP Deployment on AWS instances across 4 regions",(0,a.kt)("br",{parentName:"p"}),"\n","\u2705 Introduction of Basic Transaction Filtering (",(0,a.kt)("inlineCode",{parentName:"p"},"BTF"),")",(0,a.kt)("br",{parentName:"p"}),"\n","\u2705 API Implementation to send transactions (",(0,a.kt)("a",{parentName:"p",href:"https://fiber.chainbound.io/docs/usage/api"},"link"),")",(0,a.kt)("br",{parentName:"p"}),"\n","\u2705 ",(0,a.kt)("inlineCode",{parentName:"p"},"FIBER")," deployment across 13 regions  "),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Preliminary results: ~120ms faster than Infura (median) and ~5/10% faster than Bloxroute")),(0,a.kt)("h2",{id:"phase-2-fiber-optimizoooor"},"Phase 2: ",(0,a.kt)("strong",{parentName:"h2"},"Fiber")," optimizoooor"),(0,a.kt)("h4",{id:"december-22---january-23"},(0,a.kt)("em",{parentName:"h4"},"December '22 -> January '23")),(0,a.kt)("p",null,"\u2705 Set database for transaction indexing and tracing (",(0,a.kt)("a",{parentName:"p",href:"/docs/usage/tracing"},"link"),"), further add-ons include:",(0,a.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\ud83d\udd32 Develop mapping algorithm for transactions tracing",(0,a.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\ud83d\udd32 Release ",(0,a.kt)("strong",{parentName:"p"},"fiber-monitor")," - system to monitor  major network transactions broadcasters and transactions hotspots",(0,a.kt)("br",{parentName:"p"}),"\n","\u2705 Release ",(0,a.kt)("strong",{parentName:"p"},"fiber-stats"),", a dashboard for system performance monitoring (",(0,a.kt)("a",{parentName:"p",href:"http://fiber-stats.chainbound.io/d/h4zwdDK4z/fiber-stats?orgId=1&refresh=30s"},"link"),")",(0,a.kt)("br",{parentName:"p"}),"\n","\u2705 Upgrade internal messaging network with ~2x throughput and improved latency",(0,a.kt)("br",{parentName:"p"}),"\n","\u2705 Release ",(0,a.kt)("strong",{parentName:"p"},"fiber-inject")," - full node sidecar for injecting ",(0,a.kt)("strong",{parentName:"p"},"Fiber")," transactions into local mempool over p2p (",(0,a.kt)("a",{parentName:"p",href:"/docs/usage/fiber-inject"},"link"),")",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Deployment of ",(0,a.kt)("strong",{parentName:"p"},"fiber-blockmon")," - tool to monitor block propagation",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Release ",(0,a.kt)("inlineCode",{parentName:"p"},"fiber-py")," - Fiber client in python",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Implementation of peer-selection-algorithm for optimized network topology",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Development of observability tools and metrics for debugging, research and system monitoring  "),(0,a.kt)("h2",{id:"phase-3-privatizing-the-order-flow"},"Phase 3: Privatizing the order-flow"),(0,a.kt)("h4",{id:"january---march-23"},(0,a.kt)("em",{parentName:"h4"},"January -> March '23")),(0,a.kt)("p",null,"\ud83d\udd32 Beta deployment of ",(0,a.kt)("strong",{parentName:"p"},"fiber-flow")," - private order-flow system with direct connections to block-builders",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Production deployment of ",(0,a.kt)("strong",{parentName:"p"},"fiber-flow")," including:",(0,a.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\ud83d\udd32 Kickback rewards from MEV",(0,a.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\ud83d\udd32 Transaction & bundle simulation",(0,a.kt)("br",{parentName:"p"}),"\n","","\xa0","\xa0","\xa0","\xa0","\xa0","\ud83d\udd32 Revert protection  "),(0,a.kt)("h2",{id:"phase-4-block-builders-20"},"Phase 4: Block-Builders 2.0"),(0,a.kt)("h4",{id:"march---april-22"},(0,a.kt)("em",{parentName:"h4"},"March -> April '22")),(0,a.kt)("p",null,"\ud83d\udd32 Release of ",(0,a.kt)("strong",{parentName:"p"},"fiber-builder")," - Dedicated Fiber block-builder, leveraging Fiber network and ",(0,a.kt)("strong",{parentName:"p"},"fiber-flow")),(0,a.kt)("h2",{id:"phase-5-rolling-up-fiber"},"Phase 5: Rolling up ",(0,a.kt)("strong",{parentName:"h2"},"Fiber")),(0,a.kt)("h4",{id:"q34-23"},(0,a.kt)("em",{parentName:"h4"},"Q3/4 '23")),(0,a.kt)("p",null,"\ud83d\udd32 Release of ",(0,a.kt)("strong",{parentName:"p"},"fiber-polygon")," - Fiber implementation for the Polygon blockchain",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Release of ",(0,a.kt)("strong",{parentName:"p"},"fiber-avax")," - Fiber implementation for the Avalanche blockchain  "),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"At Chainbound we believe the future is in the proliferation of rollups. These will capture majority of blockchain activity and etherum will transition into a global settlement layer.\nRight now, rollups do not have a public mempool as a single sequencer (normally run by the rollup foundation) manages batching and validation.\nIn the future, validation will become decentralized, as anyone will be able to run sequencers. At that point Fiber will:"),"   "),(0,a.kt)("p",null,"\ud83d\udd32 Launch ",(0,a.kt)("strong",{parentName:"p"},"fiber"),", ",(0,a.kt)("strong",{parentName:"p"},"fiber-monitor"),", ",(0,a.kt)("strong",{parentName:"p"},"fiber-block")," on L2s",(0,a.kt)("br",{parentName:"p"}),"\n","\ud83d\udd32 Develop co-location services with sequencers to provide fast access to newly validated states  "),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Rollups currently in this roadmap are ",(0,a.kt)("inlineCode",{parentName:"em"},"Arbitrum")," and ",(0,a.kt)("inlineCode",{parentName:"em"},"Optimism"))))}c.isMDXComponent=!0}}]);