"use strict";(self.webpackChunkfiber_website=self.webpackChunkfiber_website||[]).push([[9896],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:3,title:"Streams"},o=void 0,s={unversionedId:"usage/streams",id:"usage/streams",title:"Streams",description:"Fiber currently only offers transaction streams. New block streams are included on the roadmap.",source:"@site/docs/usage/streams.md",sourceDirName:"usage",slug:"/usage/streams",permalink:"/docs/usage/streams",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/streams.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Streams"},sidebar:"tutorialSidebar",previous:{title:"API Design",permalink:"/docs/usage/api"},next:{title:"Tracing",permalink:"/docs/usage/tracing"}},l={},c=[{value:"Transaction Stream",id:"transaction-stream",level:2},{value:"Filtering",id:"filtering",level:2},{value:"Example: getting all USDC and USDT transfers",id:"example-getting-all-usdc-and-usdt-transfers",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Fiber currently only offers transaction streams. New block streams are included on the roadmap."),(0,a.kt)("h2",{id:"transaction-stream"},"Transaction Stream"),(0,a.kt)("p",null,"The transaction stream provides ",(0,a.kt)("strong",{parentName:"p"},"low-latency access to all new transactions seen by the Fiber Network"),".\nBecause we want very low latency, ",(0,a.kt)("strong",{parentName:"p"},"Fiber doesn't validate these transactions against EVM state"),". Each node contains a simple transaction pool to drop duplicates, and validates the signature of incoming transactions, but that's all. This is something\nthe user should keep in mind!"),(0,a.kt)("p",null,"The transaction stream contains ",(0,a.kt)("strong",{parentName:"p"},"full transactions"),", and the client implementations will usually convert these transactions\nto a popular library implementation, like an ",(0,a.kt)("inlineCode",{parentName:"p"},"ethers-rs")," transaction in Rust or an ",(0,a.kt)("inlineCode",{parentName:"p"},"@ethereumjs/tx")," ",(0,a.kt)("inlineCode",{parentName:"p"},"TypedTransaction")," in JavaScript."),(0,a.kt)("h2",{id:"filtering"},"Filtering"),(0,a.kt)("p",null,"Usually, users are only interested in specific transactions, which is why Fiber offers ",(0,a.kt)("strong",{parentName:"p"},"transaction filters"),".\nCurrently, you can filter based on the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Sender"),(0,a.kt)("li",{parentName:"ul"},"Receiver"),(0,a.kt)("li",{parentName:"ul"},"MethodID"),(0,a.kt)("li",{parentName:"ul"},"Value")),(0,a.kt)("p",null,"You can build complex filters using ",(0,a.kt)("inlineCode",{parentName:"p"},"AND")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"OR")," operators. Let's look an example."),(0,a.kt)("h4",{id:"example-getting-all-usdc-and-usdt-transfers"},"Example: getting all USDC and USDT transfers"),(0,a.kt)("p",null,"To transfer an ERC20 token, you call the ",(0,a.kt)("inlineCode",{parentName:"p"},"Transfer")," method, which has the following method ID: ",(0,a.kt)("inlineCode",{parentName:"p"},"0xa9059cbb"),".\nWe want USDC and USDT transfers, so we filter the ",(0,a.kt)("inlineCode",{parentName:"p"},"To")," field on either of the addresses. In string format,\nit would look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'METHOD_ID == "0xa9059cbb" AND (TO == "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48" OR TO == "0xdAC17F958D2ee523a2206206994597C13D831ec7")\n')),(0,a.kt)("p",null,"The client implementations offer easy-to-use interfaces for constructing filters.\nUsing the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/chainbound/fiber-go"},"Go client")," as an example, we can construct a filter like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'f := filter.New(\n    filter.And(\n        filter.MethodID("0xa9059cbb"),\n        filter.Or(\n            filter.To("0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"),\n            filter.To("0xdAC17F958D2ee523a2206206994597C13D831ec7"),\n        ),\n    ),\n)\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},'Evaluating filters will introduce anywhere from 10 to 200 microseconds, depending on the complexity of the filter.\nThere\'s currently a limit of 16 filter elements or "nodes" in the filter tree.')))}u.isMDXComponent=!0}}]);