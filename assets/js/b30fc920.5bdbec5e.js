"use strict";(self.webpackChunkfiber_website=self.webpackChunkfiber_website||[]).push([[620],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,b=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(b,i(i({ref:t},u),{},{components:n})):a.createElement(b,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),r=n(7294),o=n(6010),i=n(2389),l=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:n,block:i,defaultValue:m,values:d,groupId:b,className:g}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=d??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,l.l)(h,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===m?m:m??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==y&&!h.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:N}=(0,s.U)(),[w,T]=(0,r.useState)(y),x=[],{blockElementScrollPositionUntilNextRender:P}=(0,c.o5)();if(null!=b){const e=v[b];null!=e&&e!==w&&h.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,n=x.indexOf(t),a=h[n].value;a!==w&&(P(t),T(a),null!=b&&N(b,String(a)))},I=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=x.indexOf(e.currentTarget)+1;n=x[t]??x[0];break}case"ArrowLeft":{const t=x.indexOf(e.currentTarget)-1;n=x[t]??x[x.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":i},g)},h.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>x.push(e),onKeyDown:I,onFocus:O,onClick:O},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,r.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,i.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},1272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(5488),i=n(5162);const l={sidebar_position:1,title:"Getting Started"},s=void 0,c={unversionedId:"usage/getting-started",id:"usage/getting-started",title:"Getting Started",description:"Users can connect to the API at beta.fiberapi.io:8080, providing their API key in the process.",source:"@site/docs/usage/getting-started.mdx",sourceDirName:"usage",slug:"/usage/getting-started",permalink:"/docs/usage/getting-started",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/getting-started.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started"},sidebar:"tutorialSidebar",previous:{title:"Use Cases",permalink:"/docs/use-cases"},next:{title:"Subscribing to Streams",permalink:"/docs/usage/streams_sub"}},u={},p=[{value:"Installing",id:"installing",level:2},{value:"Connecting",id:"connecting",level:2}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Users can connect to the API at ",(0,r.kt)("inlineCode",{parentName:"p"},"beta.fiberapi.io:8080"),", providing their API key in the process.\nThe domain will resolve to the closest node to the client, based on latency\n(check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/regions"},"regions")," for where this will be)."),(0,r.kt)("p",null,"To check your latency run the following command from the same machine as your client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ping beta.fiberapi.io\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Fiber's API uses gRPC, to make the connection process as easy as possible, utilize following packages:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Programming Language"),(0,r.kt)("th",{parentName:"tr",align:null},"Package"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"JavaScript / TypeScript"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/chainbound/fiber-ts"},"fiber-ts"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Golang"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/chainbound/fiber-go"},"fiber-go"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Python"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/chainbound/fiber-py"},"fiber-py"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Rust"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/chainbound/fiber-rs"},"fiber-rs"))))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We highly recommend using either the ",(0,r.kt)("strong",{parentName:"p"},"Go")," or ",(0,r.kt)("strong",{parentName:"p"},"Rust")," packages if you're looking for the best performance.")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you want to build your own client (or help with the existing implementations), all you need are the\nprotobuf / gRPC files and a compiler for your language."),(0,r.kt)("p",{parentName:"admonition"},"Documentation for different gRPC language\nimplementations can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://grpc.io/docs/languages/"},"https://grpc.io/docs/languages"),".\nThe Fiber protobuf definitions are at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/chainbound/fiber-proto"},"https://github.com/chainbound/fiber-proto"),"."),(0,r.kt)("p",{parentName:"admonition"},"For examples of how to actually use it (API authentication), refer to the already implemented packages.")),(0,r.kt)("h2",{id:"installing"},"Installing"),(0,r.kt)("p",null,"Fiber is available as a package on the following package managers:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"go",label:"Golang",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"go get github.com/chainbound/fiber-go\n"))),(0,r.kt)(i.Z,{value:"rs",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo add --git https://github.com/chainbound/fiber-rs\n"))),(0,r.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm i fiber-ts\n# or\nyarn add fiber-ts\n"))),(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install git+https://github.com/chainbound/fiber-py\n# or\npoetry add git+https://github.com/chainbound/fiber-py\n")))),(0,r.kt)("h2",{id:"connecting"},"Connecting"),(0,r.kt)("p",null,"The first step is connecting to a Fiber Node API. As we've seen above, there's one URL configured with latency-based routing\nto always resolve to the closest instance to your client."),(0,r.kt)("p",null,"Here's how to use the different packages to connect to Fiber:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"go",label:"Golang",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n    "log"\n    "time"\n\n    fiber "github.com/chainbound/fiber-go"\n)\n\nfunc main() {\n    client := fiber.NewClient("beta.fiberapi.io:8080", "YOUR_API_KEY")\n    // Close the client when you\'re done to make sure API accounting is done correctly\n    defer client.Close()\n\n    // Configure a timeout for establishing connection\n    ctx, cancel := context.WithTimeout(context.Background(), 3*time.Second)\n    defer cancel()\n    if err := client.Connect(ctx); err != nil {\n        log.Fatal(err)\n    }\n}\n'))),(0,r.kt)(i.Z,{value:"rs",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use fiber::Client;\n\n#[tokio::main]\nasync fn main() {\n    let mut client = Client::connect(\n        "beta.fiberapi.io:8080".to_string(),\n        "YOUR_API_KEY".to_string()\n    ).await.unwrap();\n}\n'))),(0,r.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { Client } from "fiber-ts";\n\nconst client = new Client("beta.fiberapi.io:8080", "YOUR_API_KEY");\n\n// Wait 3 seconds for the client to connect\nawait client.waitForReady(3);\n'))),(0,r.kt)(i.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"from fiber.client import Client\n\nclient = Client('beta.fiberapi.io:8080', 'YOUR_API_KEY')\ntry:\n  client.connect()\nexcept Exception as e:\n  print('Error connecting', e)\n")))))}d.isMDXComponent=!0}}]);